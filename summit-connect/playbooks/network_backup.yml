---
- name: Pull backup repository
  hosts: localhost
  gather_facts: false

  vars:
    config_repo_url: "git@github.com:zjleblanc/{{ config_repo_name }}.git"

  tasks:
    - name: Pull the config repo
      ansible.builtin.include_role:
        name: git
        tasks_from: pull.yml
      vars:
        git_url: "{{ config_repo_url }}"
        git_key: "{{ git_ssh_key }}"
        git_branch: master

    - name: Ensure dest directory exists
      delegate_to: localhost
      run_once: true # noqa run-once[task]
      ansible.builtin.file:
        name: "{{ config_repo_url }}/backups"
        state: directory
        mode: "0755"

- name: Backup network configurations
  hosts: "{{ _hosts }}"
  gather_facts: false

  vars:
    config_repo_url: "git@github.com:zjleblanc/{{ config_repo_name }}.git"
    config_dest: "{{ playbook_dir }}/{{ config_repo_name }}/backups/{{ inventory_hostname }}.config.yml"

  tasks:
    - name: List resource modules
      ansible.netcommon.network_resource:
      register: r_net_modules

    - name: Gather resource configs
      loop: "{{ r_net_modules.modules }}"
      loop_control:
        loop_var: resource
      ansible.builtin.include_tasks:
        file: tasks/get_resource_config.yml

    - name: Write the config to a file
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{ device_configs | to_nice_yaml }}"
        dest: "{{ config_dest }}"
        mode: "0755"

- name: Publish backups
  hosts: localhost
  gather_facts: false

  vars:
    config_repo_url: "git@github.com:zjleblanc/{{ config_repo_name }}.git"

  tasks:
    - name: Set date fact
      ansible.builtin.set_fact:
        config_date: "{{ lookup('pipe', 'date +%Y.%m.%d.%H.%M.%S') }}"

    - name: Publish the changes
      ansible.builtin.include_role:
        name: git
        tasks_from: push.yml
      vars:
        git_url: "{{ config_repo_url }}"
        git_key: "{{ git_ssh_key }}"
        git_email: "ansible@summit.com"
        git_username: ansible
        git_branch: master
        git_msg: >-
          Network configuration backed up by ansible
          on {{ config_date.split('.')[1] }}-{{ config_date.split('.')[0] }}-{{ config_date.split('.')[2] }}
          @ {{ config_date.split('.')[3] }}:{{ config_date.split('.')[4] }}:{{ config_date.split('.')[5] }}
        git_push_tag: "{{ config_date }}"
        git_changelog: CHANGELOG.md
        git_remove_local: true

    - name: Update Network Restore survey options
      when: git_tag_list is defined
      ansible.controller.job_template:
        name: Summit Connect // Network Restore
        organization: Autodotes
        job_type: run
        inventory: Cisco Lab
        project: Network Management
        playbook: summit-connect/playbooks/network_restore.yml
        execution_environment: ee-networking
        ask_variables_on_launch: true
        survey_enabled: yes
        survey_spec:
          name: Network Restore Survey
          description: Prompt user for restore point based on backup configs available in git
          spec:
            - question_name: "Specify target hosts"
              variable: _hosts
              type: "text"
              default: "{{ git_tag_list[0] }}"
              required: true
            - question_name: "Choose your restore point (git tag)"
              question_description: "Each backup commit is tagged with the time it was created"
              variable: backup_config_tag
              type: "multiplechoice"
              choices: "{{ git_tag_list | default(['undef']) | reverse | list }}"
              default: "{{ git_tag_list[0] }}"
              required: true
        credentials:
          - Git Role Credential
          - Controller Credential

    - name: Stat backup config tag
      ansible.builtin.set_stats:
        data:
          backup_config_tag: "{{ config_date }}"
