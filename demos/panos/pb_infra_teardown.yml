- name: Build the Palo Alto demo infrastructure
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - "{{ playbook_dir }}/vars/panos_infra.yml"

  tasks:
    - name: Terminate panos demo ec2 instances
      amazon.aws.ec2_instance:
        region: "{{ aws_region | default(omit) }}"
        state: absent
        wait: true
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Gather network interfaces
      register: r_eni_info
      amazon.aws.ec2_eni_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete network interfaces
      loop: "{{ r_eni_info.network_interfaces }}"
      register: r_eni_info
      amazon.aws.ec2_eni:
        region: "{{ aws_region | default(omit) }}"
        eni_id: "{{ item.id }}"
        state: absent

    - name: Gather elastic IPs
      register: r_eip_info
      amazon.aws.ec2_eip_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Release elastic IPs
      loop: "{{ r_eip_info.addresses }}"
      amazon.aws.ec2_eip:
        region: "{{ aws_region | default(omit) }}"
        ip: "{{ item.public_ip }}"
        state: absent

    - name: Gather route table info
      register: r_vpc_rt_info
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete route table(s)
      loop: "{{ r_vpc_rt_info.route_tables }}"
      loop_control:
        label: "{{ item.route_table_id }}"
      amazon.aws.ec2_vpc_route_table:
        region: "{{ aws_region | default(omit) }}"
        route_table_id: "{{ item.route_table_id }}"
        lookup: id
        state: absent

    - name: Gather subnet info
      register: r_vpc_subnet_info
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete subnet(s)
      loop: "{{ r_vpc_subnet_info.subnets }}"
      amazon.aws.ec2_vpc_subnet:
        region: "{{ aws_region | default(omit) }}"
        cidr: "{{ item.cidr_block }}"
        vpc_id: "{{ item.vpc_id }}"
        state: absent

    - name: Gather security group info
      register: r_sg_info
      amazon.aws.ec2_security_group_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete security group(s)
      loop: "{{ r_sg_info.security_groups }}"
      amazon.aws.ec2_security_group:
        region: "{{ aws_region | default(omit) }}"
        group_id: "{{ item.group_id }}"
        state: absent

    - name: Gather internet gateway info
      register: r_vpc_igw_info
      amazon.aws.ec2_vpc_igw_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete internet gateway(s)
      loop: "{{ r_vpc_igw_info.internet_gateways }}"
      amazon.aws.ec2_vpc_igw:
        region: "{{ aws_region | default(omit) }}"
        internet_gateway_id: "{{ item.internet_gateway_id }}"
        state: absent

    - name: Gather VPC info
      register: r_vpc_info
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region | default(omit) }}"
        filters:
          "tag:prefix": "{{ panos_demo_prefix }}"

    - name: Delete VPC
      when: r_vpc_info.vpcs | length
      amazon.aws.ec2_vpc_net:
        region: "{{ aws_region | default(omit) }}"
        vpc_id: "{{ r_vpc_info.vpcs[0].id }}"
        state: absent