---
- name: Get organization id
  register: r_bastion_org_id
  no_log: "{{ credential_secure_logging }}"
  ansible.builtin.uri:
    url: "{{ lookup('env', 'CONTROLLER_HOST') }}/{{ org_base_url }}/?name=Autodotes"
    method: GET
    headers:
      Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"

- name: Get credential id
  register: r_bastion_cred_id
  no_log: "{{ credential_secure_logging }}"
  ansible.builtin.uri:
    url: "{{ lookup('env', 'CONTROLLER_HOST') }}/{{ credential_base_url }}/?name=Palo+Alto+Bastion"
    method: GET
    headers:
      Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"

- name: Get credential type id
  register: r_bastion_cred_type_id
  no_log: "{{ credential_secure_logging }}"
  ansible.builtin.uri:
    url: "{{ lookup('env', 'CONTROLLER_HOST') }}/{{ credential_type_base_url }}/?name=SSH+Proxy"
    method: GET
    headers:
      Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"

- name: Assert expected resources found
  ansible.builtin.assert:
    that:
      - r_bastion_org_id.json.count == 1
      - r_bastion_cred_id.json.count == 1
      - r_bastion_cred_type_id.json.count == 1

- name: Extract resource ids
  ansible.builtin.set_fact:
    bastion_credential_id: "{{ r_bastion_cred_id.json.results[0].id }}"
    bastion_credential_type_id: "{{ r_bastion_cred_type_id.json.results[0].id }}"
    bastion_organization_id: "{{ r_bastion_org_id.json.results[0].id }}"

- name: Update credential
  no_log: "{{ credential_secure_logging }}"
  ansible.builtin.uri:
    url: "{{ lookup('env', 'CONTROLLER_HOST') }}/{{ credential_base_url }}/{{ bastion_credential_id }}/"
    method: PATCH
    headers:
      Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"
    body_format: json
    body:
      name: Palo Alto Bastion
      organization: "{{ bastion_organization_id }}" # Autodotes
      isOrgLookupDisabled: false
      description: Palo Alto Bastion credential for supporting SSH proxy implementation
      credential_type: "{{ bastion_credential_type_id }}" # SSH Proxy
      inputs:
        ssh_proxy_username: "ec2-user"
        ssh_proxy_host: "{{ r_bastion_eip_public.public_ip }}"
        ssh_proxy_key: "$encrypted$"
...