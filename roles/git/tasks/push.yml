---
- name: Unpack
  ansible.builtin.include_tasks: unpack.yml

- name: Set repo path
  ansible.builtin.set_fact:
    git_repo_path: "{{ git_url | regex_search('/(.+).git') | regex_replace('.git', '') }}"

- name: Git add all new files
  ansible.builtin.shell: git add -A
  args:
    chdir: "{{ git_repo_root }}"

- name: Git status
  ansible.builtin.shell: git status -s
  args:
    chdir: "{{ git_repo_root }}"
  register: git_add_status

- name: Git changelog entry
  when: 
    - git_changelog is defined
    - git_push_tag is defined
    - git_add_status.stdout_lines|length > 0
  ansible.builtin.template:
    src: CHANGELOG.md.j2
    dest: "{{ git_changelog_path | default('/tmp/' + git_changelog) }}"

- name: Git username
  when: git_username is defined
  ansible.builtin.shell: git config user.name "{{ git_username }}"
  args:
    chdir: "{{ git_repo_root }}"

- name: Git email
  when: git_email is defined
  ansible.builtin.shell: git config user.email "{{ git_email }}"
  args:
    chdir: "{{ git_repo_root }}"

- name: Git commit
  ansible.builtin.shell: git add -A && git commit -m "{{ git_msg }}"
  args:
    chdir: "{{ git_repo_root }}"
  ignore_errors: true
  register: git_commit

- name: Git wrapper
  ansible.builtin.copy:
    dest: "{{ playbook_dir }}/.ssh/ssh"
    content: "ssh -i {{ git_temp_file.path }} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*"
    mode: 0700

- name: Git push
  when: git_commit is not failed
  ansible.builtin.shell: git push --force
  args:
    chdir: "{{ git_repo_root }}"
  environment:
    GIT_SSH: "{{ playbook_dir }}/.ssh/ssh"

- name: Git tag
  when:
    - git_commit is not failed
    - git_push_tag is defined
  ansible.builtin.shell: git tag {{ git_push_tag|default('ansible') }} {{ git_branch }} && git push origin {{ git_push_tag|default('ansible') }}
  args:
    chdir: "{{ git_repo_root }}"
  environment:
    GIT_SSH: "{{ playbook_dir }}/.ssh/ssh"
  register: r_git_push_tag

- name: Git list tags
  when:
    - git_commit is not failed
    - git_push_tag is defined
  ansible.builtin.shell: git tag -l
  args:
    chdir: "{{ git_repo_root }}"
  register: git_tag_list_raw

- name: Set tag list for survey
  when: 
    - git_tag_list_raw is defined
    - git_tag_list_raw.stdout_lines is defined
  ansible.builtin.set_fact:
    git_tag_list: "{{ git_tag_list_raw.stdout_lines }}"

- name: Cleanup local repo
  when: git_remove_local
  ansible.builtin.shell: rm -rf {{ git_repo_root }}
  register: git_cleanup_repo

- name: Cleanup keys
  ansible.builtin.include_tasks: cleanup_keys.yml
